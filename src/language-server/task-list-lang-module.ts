import {
    createDefaultModule, createDefaultSharedModule, DefaultSharedModuleContext, inject,
    LangiumSharedServices
} from 'langium';
import { SourceModelGeneratedModule, TaskListGeneratedModule, TaskListLangGeneratedSharedModule } from './generated/module';
import { SourceModelModule, SourceModelServices } from './task-list-sm/source-model-module';
import { TaskListModule, TaskListServices } from './task-list/task-list-module';
import { registerTaskListValidationChecks } from './task-list/validation/task-list-validation';

/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
export function createTaskListLangServices(context: DefaultSharedModuleContext): {
    shared: LangiumSharedServices,
    TaskList: TaskListServices,
    SourceModel: SourceModelServices,
} {
    const shared = inject(
        createDefaultSharedModule(context),
        TaskListLangGeneratedSharedModule
    );
    const TaskList = inject(
        createDefaultModule({ shared }),
        TaskListGeneratedModule,
        TaskListModule
    );
    const SourceModel = inject(
        createDefaultModule({ shared }),
        SourceModelGeneratedModule,
        SourceModelModule
    );
    shared.ServiceRegistry.register(TaskList);
    shared.ServiceRegistry.register(SourceModel);
    registerTaskListValidationChecks(TaskList);
    return { shared, TaskList, SourceModel };
}
